/**
 * ü§ñ 100% –ë–ï–°–ü–õ–ê–¢–ù–û–ï –†–ï–®–ï–ù–ò–ï —á–µ—Ä–µ–∑ Telegram Bot
 * –ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞—è–≤–æ–∫!
 * –ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram!
 */

// üîß –ù–ê–°–¢–†–û–ô–ö–ò TELEGRAM BOT (–ø–æ–ª—É—á–∏—Ç—å —É @BotFather)
const TELEGRAM_CONFIG = {
    botToken: '7578308615:AAE3CHZWnj67k2g4oNJp3dve6ng0k2hMq8M',
    
    // üë• –û–¢–ü–†–ê–í–ö–ê –ù–ï–°–ö–û–õ–¨–ö–ò–ú –õ–Æ–î–Ø–ú (–¥–æ–±–∞–≤—å—Ç–µ Chat ID –∫–∞–∂–¥–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞)
    chatIds: [
        '763907736',           // Chat ID –ø–µ—Ä–≤–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ ‚úÖ
        '7706008166'           // Chat ID –≤—Ç–æ—Ä–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ ‚úÖ
    ],
    
    // üìù –ò–º–µ–Ω–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π (–¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è—Ö)
    adminNames: [
        '@first_person',       // Username –ø–µ—Ä–≤–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ (ID: 763907736)
        '@second_person'       // Username –≤—Ç–æ—Ä–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ (ID: 7706008166)
    ]
};

/**
 * –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞—è–≤–∫–∏ –≤ Telegram
 */
async function sendToTelegram(formData) {
    try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        if (TELEGRAM_CONFIG.botToken.includes('YOUR_BOT_TOKEN') || 
            TELEGRAM_CONFIG.chatIds.some(id => id.includes('CHAT_ID_PERSON'))) {
            throw new Error('Telegram Bot –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω - –Ω—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å Chat ID –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π');
        }
        
        // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∫–æ–¥ —É—Å–ª—É–≥–∏ –≤ –Ω–∞–∑–≤–∞–Ω–∏–µ
        const serviceNames = {
            'video': '–í–∏–¥–µ–æ–Ω–∞–±–ª—é–¥–µ–Ω–∏–µ',
            'access': '–ö–æ–Ω—Ç—Ä–æ–ª—å –¥–æ—Å—Ç—É–ø–∞',
            'intercom': '–î–æ–º–æ—Ñ–æ–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã',
            'alarm': '–û—Ö—Ä–∞–Ω–Ω–∞—è —Å–∏–≥–Ω–∞–ª–∏–∑–∞—Ü–∏—è',
            'automation': '–ê–≤—Ç–æ–º–∞—Ç–∏–∫–∞ –≤–æ—Ä–æ—Ç',
            'scs': '–°–ö–°',
            'consultation': '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è',
            'other': '–î—Ä—É–≥–æ–µ'
        };
        
        const serviceName = serviceNames[formData.service] || formData.service || '–ù–µ –≤—ã–±—Ä–∞–Ω–∞';
        
        // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        const message = `üîî <b>–ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê –° –°–ê–ô–¢–ê</b>\n\n` +
                       `üë§ <b>–ò–º—è:</b> ${formData.name}\n` +
                       `üìû <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> <code>${formData.phone}</code>\n` +
                       `üìß <b>Email:</b> ${formData.email || '–ù–µ —É–∫–∞–∑–∞–Ω'}\n` +
                       `üõ†Ô∏è <b>–£—Å–ª—É–≥–∞:</b> ${serviceName}\n` +
                       `üí¨ <b>–°–æ–æ–±—â–µ–Ω–∏–µ:</b> ${formData.message || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}\n` +
                       `üïí <b>–í—Ä–µ–º—è:</b> ${new Date().toLocaleString('ru-RU')}`;
        
        // üë• –û–¢–ü–†–ê–í–õ–Ø–ï–ú –í–°–ï–ú –ü–û–õ–£–ß–ê–¢–ï–õ–Ø–ú
        const telegramURL = `https://api.telegram.org/bot${TELEGRAM_CONFIG.botToken}/sendMessage`;
        const sendPromises = [];
        const successfulSends = [];
        const failedSends = [];
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∂–¥–æ–º—É –ø–æ–ª—É—á–∞—Ç–µ–ª—é
        for (let i = 0; i < TELEGRAM_CONFIG.chatIds.length; i++) {
            const chatId = TELEGRAM_CONFIG.chatIds[i];
            const adminName = TELEGRAM_CONFIG.adminNames[i] || `–ü–æ–ª—É—á–∞—Ç–µ–ª—å ${i + 1}`;
            
            const sendPromise = fetch(telegramURL, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    chat_id: chatId,
                    text: message,
                    parse_mode: 'HTML',
                    disable_web_page_preview: true
                })
            })
            .then(response => response.json())
            .then(result => {
                if (result.ok) {
                    successfulSends.push(adminName);
                    console.log(`‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ ${adminName} (${chatId})`);
                } else {
                    failedSends.push(`${adminName}: ${result.description}`);
                    console.log(`‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ ${adminName} (${chatId}):`, result.description);
                }
                return result;
            })
            .catch(error => {
                failedSends.push(`${adminName}: ${error.message}`);
                console.log(`‚ùå –°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞ ${adminName} (${chatId}):`, error.message);
            });
            
            sendPromises.push(sendPromise);
        }
        
        // –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Å–µ—Ö –æ—Ç–ø—Ä–∞–≤–æ–∫
        await Promise.all(sendPromises);
        
        // –§–æ—Ä–º–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        if (successfulSends.length > 0) {
            let resultMessage = `‚úÖ –ó–ê–Ø–í–ö–ê –û–¢–ü–†–ê–í–õ–ï–ù–ê!\n\n`;
            
            if (successfulSends.length === TELEGRAM_CONFIG.chatIds.length) {
                resultMessage += `üì± –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –í–°–ï–ú –ø–æ–ª—É—á–∞—Ç–µ–ª—è–º:\n`;
            } else {
                resultMessage += `üì± –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã (${successfulSends.length} –∏–∑ ${TELEGRAM_CONFIG.chatIds.length}):\n`;
            }
            
            successfulSends.forEach(name => {
                resultMessage += `   ‚úÖ ${name}\n`;
            });
            
            if (failedSends.length > 0) {
                resultMessage += `\n‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å:\n`;
                failedSends.forEach(error => {
                    resultMessage += `   ‚ùå ${error}\n`;
                });
            }
            
            resultMessage += `\nüìã –î–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏:\n` +
                           `üë§ –ò–º—è: ${formData.name}\n` +
                           `üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${formData.phone}\n` +
                           `üìß Email: ${formData.email || '–ù–µ —É–∫–∞–∑–∞–Ω'}\n` +
                           `üõ†Ô∏è –£—Å–ª—É–≥–∞: ${serviceName}\n` +
                           `üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: ${formData.message || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}\n\n` +
                           `‚ö° –ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã!\n` +
                           `üìû –û–∂–∏–¥–∞–π—Ç–µ –∑–≤–æ–Ω–∫–∞: +7 989 123 39 53`;
            
            return {
                success: true,
                message: resultMessage
            };
        } else {
            throw new Error(`–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∏ –æ–¥–Ω–æ–º—É –ø–æ–ª—É—á–∞—Ç–µ–ª—é: ${failedSends.join(', ')}`);
        }
        
    } catch (error) {
        console.error('Telegram Error:', error);
        return {
            success: false,
            error: error.message
        };
    }
}

/**
 * Discord Webhook (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ Telegram)
 */
async function sendToDiscord(formData) {
    try {
        const DISCORD_WEBHOOK = 'YOUR_DISCORD_WEBHOOK_URL';
        
        if (DISCORD_WEBHOOK.includes('YOUR_DISCORD_WEBHOOK_URL')) {
            throw new Error('Discord Webhook –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
        }
        
        const serviceNames = {
            'video': '–í–∏–¥–µ–æ–Ω–∞–±–ª—é–¥–µ–Ω–∏–µ',
            'access': '–ö–æ–Ω—Ç—Ä–æ–ª—å –¥–æ—Å—Ç—É–ø–∞',
            'intercom': '–î–æ–º–æ—Ñ–æ–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã',
            'alarm': '–û—Ö—Ä–∞–Ω–Ω–∞—è —Å–∏–≥–Ω–∞–ª–∏–∑–∞—Ü–∏—è',
            'automation': '–ê–≤—Ç–æ–º–∞—Ç–∏–∫–∞ –≤–æ—Ä–æ—Ç',
            'scs': '–°–ö–°',
            'consultation': '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è',
            'other': '–î—Ä—É–≥–æ–µ'
        };
        
        const serviceName = serviceNames[formData.service] || formData.service || '–ù–µ –≤—ã–±—Ä–∞–Ω–∞';
        
        const embed = {
            title: "üîî –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞ –†–≠–ú-–ò–Ω—Å–∞–π—Ç",
            color: 4886890, // –°–∏–Ω–∏–π —Ü–≤–µ—Ç
            fields: [
                { name: "üë§ –ò–º—è", value: formData.name, inline: true },
                { name: "üìû –¢–µ–ª–µ—Ñ–æ–Ω", value: formData.phone, inline: true },
                { name: "üìß Email", value: formData.email || '–ù–µ —É–∫–∞–∑–∞–Ω', inline: true },
                { name: "üõ†Ô∏è –£—Å–ª—É–≥–∞", value: serviceName, inline: true },
                { name: "üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ", value: formData.message || '–ù–µ —É–∫–∞–∑–∞–Ω–æ', inline: false },
                { name: "üïí –í—Ä–µ–º—è", value: new Date().toLocaleString('ru-RU'), inline: true }
            ],
            footer: {
                text: "–°–∞–π—Ç –†–≠–ú-–ò–Ω—Å–∞–π—Ç"
            },
            timestamp: new Date().toISOString()
        };
        
        const response = await fetch(DISCORD_WEBHOOK, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                embeds: [embed]
            })
        });
        
        if (response.ok) {
            return {
                success: true,
                message: `‚úÖ –ó–ê–Ø–í–ö–ê –û–¢–ü–†–ê–í–õ–ï–ù–ê –í DISCORD!\n\n–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.\n–û–∂–∏–¥–∞–π—Ç–µ –∑–≤–æ–Ω–∫–∞: +7 989 123 39 53`
            };
        } else {
            throw new Error(`Discord Webhook error: ${response.status}`);
        }
        
    } catch (error) {
        console.error('Discord Error:', error);
        return {
            success: false,
            error: error.message
        };
    }
}

/**
 * Google Forms (100% –±–µ—Å–ø–ª–∞—Ç–Ω–æ, –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ)
 */
async function sendToGoogleForms(formData) {
    try {
        // URL Google Form (–Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å —Ñ–æ—Ä–º—É –∏ –ø–æ–ª—É—á–∏—Ç—å URL)
        const GOOGLE_FORM_URL = 'YOUR_GOOGLE_FORM_URL';
        
        if (GOOGLE_FORM_URL.includes('YOUR_GOOGLE_FORM_URL')) {
            throw new Error('Google Form –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞');
        }
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ Google Form
        const formDataToSend = new FormData();
        formDataToSend.append('entry.NAME_FIELD', formData.name);
        formDataToSend.append('entry.PHONE_FIELD', formData.phone);
        formDataToSend.append('entry.EMAIL_FIELD', formData.email || '');
        formDataToSend.append('entry.SERVICE_FIELD', formData.service || '');
        formDataToSend.append('entry.MESSAGE_FIELD', formData.message || '');
        
        const response = await fetch(GOOGLE_FORM_URL, {
            method: 'POST',
            body: formDataToSend,
            mode: 'no-cors' // Google Forms —Ç—Ä–µ–±—É–µ—Ç no-cors
        });
        
        // Google Forms –≤—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —É—Å–ø–µ—Ö –≤ no-cors —Ä–µ–∂–∏–º–µ
        return {
            success: true,
            message: `‚úÖ –ó–ê–Ø–í–ö–ê –û–¢–ü–†–ê–í–õ–ï–ù–ê –í GOOGLE FORMS!\n\n–î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ Google –¢–∞–±–ª–∏—Ü–µ.\n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∞—à—É Google Forms.\n\nüìû –ö–æ–Ω—Ç–∞–∫—Ç: +7 989 123 39 53`
        };
        
    } catch (error) {
        console.error('Google Forms Error:', error);
        return {
            success: false,
            error: error.message
        };
    }
}

/**
 * Netlify Forms (–µ—Å–ª–∏ —Å–∞–π—Ç –Ω–∞ Netlify)
 */
async function sendToNetlify(formData) {
    try {
        const response = await fetch('/', {
            method: 'POST',
            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
            body: new URLSearchParams({
                'form-name': 'contact',
                'name': formData.name,
                'phone': formData.phone,
                'email': formData.email || '',
                'service': formData.service || '',
                'message': formData.message || ''
            })
        });
        
        if (response.ok) {
            return {
                success: true,
                message: `‚úÖ –ó–ê–Ø–í–ö–ê –û–¢–ü–†–ê–í–õ–ï–ù–ê –ß–ï–†–ï–ó NETLIFY!\n\n–î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ø–∞–Ω–µ–ª–∏ Netlify.\nüìû –ö–æ–Ω—Ç–∞–∫—Ç: +7 989 123 39 53`
            };
        } else {
            throw new Error('Netlify Forms error');
        }
        
    } catch (error) {
        console.error('Netlify Error:', error);
        return {
            success: false,
            error: error.message
        };
    }
}

/**
 * –ì–õ–ê–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø - –ø—Ä–æ–±—É–µ—Ç –≤—Å–µ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã
 */
async function sendEmailFree100(formData) {
    console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º 100% –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É:', formData);
    
    // 1. Telegram Bot (–†–ï–ö–û–ú–ï–ù–î–£–ï–ú–´–ô)
    if (!TELEGRAM_CONFIG.botToken.includes('YOUR_BOT_TOKEN')) {
        console.log('ü§ñ –ü—Ä–æ–±—É–µ–º Telegram Bot...');
        const telegramResult = await sendToTelegram(formData);
        if (telegramResult.success) {
            console.log('‚úÖ Telegram —É—Å–ø–µ—à–Ω–æ!');
            return telegramResult;
        }
        console.log('‚ùå Telegram –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª:', telegramResult.error);
    }
    
    // 2. Discord Webhook
    console.log('üéÆ –ü—Ä–æ–±—É–µ–º Discord...');
    const discordResult = await sendToDiscord(formData);
    if (discordResult.success) {
        console.log('‚úÖ Discord —É—Å–ø–µ—à–Ω–æ!');
        return discordResult;
    }
    console.log('‚ùå Discord –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª:', discordResult.error);
    
    // 3. Google Forms
    console.log('üìä –ü—Ä–æ–±—É–µ–º Google Forms...');
    const googleResult = await sendToGoogleForms(formData);
    if (googleResult.success) {
        console.log('‚úÖ Google Forms —É—Å–ø–µ—à–Ω–æ!');
        return googleResult;
    }
    console.log('‚ùå Google Forms –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª:', googleResult.error);
    
    // 4. Netlify Forms (–µ—Å–ª–∏ –Ω–∞ Netlify)
    if (window.location.hostname.includes('netlify')) {
        console.log('üåê –ü—Ä–æ–±—É–µ–º Netlify Forms...');
        const netlifyResult = await sendToNetlify(formData);
        if (netlifyResult.success) {
            console.log('‚úÖ Netlify —É—Å–ø–µ—à–Ω–æ!');
            return netlifyResult;
        }
    }
    
    // 5. –õ–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ (–≤—Å–µ–≥–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç)
    console.log('üíæ –ò—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...');
    const submissions = JSON.parse(localStorage.getItem('form_submissions') || '[]');
    const submission = {
        ...formData,
        timestamp: new Date().toISOString(),
        id: Date.now()
    };
    submissions.push(submission);
    localStorage.setItem('form_submissions', JSON.stringify(submissions));
    
    const serviceNames = {
        'video': '–í–∏–¥–µ–æ–Ω–∞–±–ª—é–¥–µ–Ω–∏–µ',
        'access': '–ö–æ–Ω—Ç—Ä–æ–ª—å –¥–æ—Å—Ç—É–ø–∞',
        'intercom': '–î–æ–º–æ—Ñ–æ–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã',
        'alarm': '–û—Ö—Ä–∞–Ω–Ω–∞—è —Å–∏–≥–Ω–∞–ª–∏–∑–∞—Ü–∏—è',
        'automation': '–ê–≤—Ç–æ–º–∞—Ç–∏–∫–∞ –≤–æ—Ä–æ—Ç',
        'scs': '–°–ö–°',
        'consultation': '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è',
        'other': '–î—Ä—É–≥–æ–µ'
    };
    
    const serviceName = serviceNames[formData.service] || formData.service || '–ù–µ –≤—ã–±—Ä–∞–Ω–∞';
    
    return {
        success: true,
        message: `üìã –ó–ê–Ø–í–ö–ê –°–û–•–†–ê–ù–ï–ù–ê –õ–û–ö–ê–õ–¨–ù–û!\n\n` +
                `üë§ –ò–º—è: ${formData.name}\n` +
                `üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${formData.phone}\n` +
                `üìß Email: ${formData.email || '–ù–µ —É–∫–∞–∑–∞–Ω'}\n` +
                `üõ†Ô∏è –£—Å–ª—É–≥–∞: ${serviceName}\n` +
                `üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: ${formData.message || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}\n\n` +
                `üìä –ü—Ä–æ—Å–º–æ—Ç—Ä: view_submissions.html\n` +
                `üìû –ü—Ä—è–º–æ–π –∫–æ–Ω—Ç–∞–∫—Ç: +7 989 123 39 53`
    };
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
if (typeof module !== 'undefined' && module.exports) {
    module.exports = { sendEmailFree100 };
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–π –¥–æ—Å—Ç—É–ø
window.sendEmailFree100 = sendEmailFree100;
